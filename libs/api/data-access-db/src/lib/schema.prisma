generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("SEEK_N_GRILL_DATABASE_URL")
}

generator nestgraphql {
  provider                = "node node_modules/prisma-nestjs-graphql"
  output                  = "../../../generated-db-types/src"
  purgeOutput             = false
  combineScalarFilters    = true
  emitSingle              = true
  noAtomicOperations      = true
  // field validator
  fields_Validator_input  = true
  fields_Validator_output = true
  fields_Validator_model  = true
  fields_Validator_from   = "class-validator"
  // Args where|data nested validator
  decorate_1_type         = "*Args"
  decorate_1_field        = "@(data|where)"
  decorate_1_name         = ValidateNested
  decorate_1_from         = "class-validator"
  decorate_1_arguments    = "[]"
}

model User {
  id       String  @id @default(uuid())
  /// @Validator.IsEmail()
  email    String  @unique
  /// @Validator.IsString()
  /// @Validator.MaxLength(100)
  /// @Validator.MinLength(3)
  name     String?
  /// @Validator.IsString()
  /// @Validator.MaxLength(100)
  /// @Validator.MinLength(8)
  /// @HideField()
  password String
}

model Location {
  id                 Int           @id @default(autoincrement())
  /// @Validator.IsString()
  /// @Validator.MaxLength(100)
  /// @Validator.MinLength(3)
  name               String
  /// @Validator.IsString()
  /// @Validator.MaxLength(1000)
  /// @Validator.MinLength(5)
  description        String?
  open               Boolean?      @default(false)
  score              Float?
  mainImageUrl       String?
  rgbBackground      RgbBackground? @relation(fields: [rgbBackgroundId], references: [id])
  rgbBackgroundId    String        @unique
}

model RgbBackground {
  id       String    @id @default(uuid())
  /// @Validator.IsInt()
  /// @Validator.Min(0)
  /// @Validator.Max(255)
  r        Int
  /// @Validator.IsInt()
  /// @Validator.Min(0)
  /// @Validator.Max(255)
  g        Int
  /// @Validator.IsInt()
  /// @Validator.Min(0)
  /// @Validator.Max(255)
  b        Int
  /// @HideField()
  a        Float?
  //----Relations----//
  /// @HideField()
  Location Location?
}
